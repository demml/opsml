[workspace]
resolver = "2"
members = [
  "crates/*",
  "py-opsml",
]
default-members = [
  "crates/*",
]

[workspace.package]
version = "0.1.0"
authors = ["Steven Forrester <sjforrester32@gmail.com>"]
edition = "2021"
license = "MIT"
repository = "https://github.com/demml/opsml"


[workspace.dependencies]
opsml-auth = { path = "crates/opsml_auth" }
opsml-cards = { path = "crates/opsml_cards" }
opsml-client = { path = "crates/opsml_client" }
opsml-colors = { path = "crates/opsml_colors" }
opsml-contracts = { path = "crates/opsml_contracts" }
opsml-error = { path = "crates/opsml_error" }
opsml-interfaces = { path = "crates/opsml_interfaces" }
opsml-logging = { path = "crates/opsml_logging" }
opsml-registry = { path = "crates/opsml_registry" }
opsml-server = { path = "crates/opsml_server" }
opsml-semver = { path = "crates/opsml_semver" }
opsml-settings = { path = "crates/opsml_settings" }
opsml-sql = { path = "crates/opsml_sql" }
opsml-storage = { path = "crates/opsml_storage" }
opsml-todo = { path = "crates/opsml_todo" }
opsml-types = { path = "crates/opsml_types" }
opsml-utils = { path = "crates/opsml_utils" }

anyhow = "1.0.93"
async-trait = "0.*"
aws-sdk-s3 = "1.*"
azure_core = "0.21.0"
azure_identity = "0.21.0"
azure_storage = "0.21.0"
azure_storage_blobs = "0.21.0"
aws-config = {version = "1.5.10", features = ["sso"]}
aws-smithy-types = { version = "1.2.9", features = ["rt-tokio", "http-body-0-4-x"] }
aws-types = "1.*"
base64 = "0.*"
bytes = "1.*"
axum = { version = "0.7.7", features = ["multipart", "macros"] }
axum-extra = { version =  "0.*", features = ["cookie"] }
clap = { version = "4.*", features = ["derive"] }
chrono = { version = "0.*", features = ["serde"] }
colored_json = "5.*"
dynfmt = { version = "0.*", features = ["curly"] }
futures = "0.*"
futures-util = "0.*"
google-cloud-storage = { version = "0.*", features  = ["auth"] }
google-cloud-auth = "0.*"
google-cloud-token = "0.*"
indicatif = "0.*"
jsonwebtoken = "9.*"
owo-colors = "4.*"
password-auth = "1.*"
pyo3 = { version = "0.23", features = ["extension-module", "anyhow", "serde", "chrono"] }
rand = "0.8.5"
rayon = "1.*"
regex = "1.*"
reqwest = { version = "0.12.*", features = ["json", "stream", "multipart", "rustls-tls", "rustls-tls-native-roots" ], default-features = false }
reqwest-middleware = "0.*"
scouter-client = { git = "https://github.com/demml/scouter.git", version = "0.4.0", branch = "update-data-profiler" }
semver = "1.*"
serde = { version = "1.*", features = ["derive"] }
serde_json = "1.*"
serde_qs = "0.*"
sqlx = { version = "0.*", features = [ "runtime-tokio", "tls-native-tls", "postgres", "mysql", "sqlite", "chrono", "json"] }
tabled = { version = "0.*", features = ["ansi"] }
tempfile = "3.*"
thiserror = "2.*"
time = "0.*"

tokio = { version = "1.*", features = ["rt", "rt-multi-thread", "macros"] }
tokio-util = { version = "0.7.12",  features = ["codec", "io"]}
tower-http = { version = "0.5.0", features = ["cors"] }
tracing = "0.*"
tracing-appender = "0.*"
tracing-core = "0.*"
tracing-subscriber = {version = "0.*", features = ["json", "time"]}
uuid = { version = "1.11.0", features = ["v4"] }
walkdir = "2.*"


[profile.release]
lto = "fat"
codegen-units = 1
strip = true
opt-level = 3

[profile.release-no-lto]
inherits = "release"
lto = false

