[workspace]
resolver = "2"
members = [
  "crates/*",
  "py-opsml",
]
default-members = [
  "crates/*",
]

[workspace.package]
version = "3.0.0-rc.14"
authors = ["Steven Forrester <sjforrester32@gmail.com>"]
edition = "2021"
license = "MIT"
repository = "https://github.com/demml/opsml"


[workspace.dependencies]
opsml-app = { path = "crates/opsml_app" }
opsml-auth = { path = "crates/opsml_auth" }
opsml-cards = { path = "crates/opsml_cards" }
opsml-cli = { path = "crates/opsml_cli" }
opsml-crypt = { path = "crates/opsml_crypt" }
opsml-client = { path = "crates/opsml_client" }
opsml-colors = { path = "crates/opsml_colors" }
opsml-events = { path = "crates/opsml_events" }
opsml-interfaces = { path = "crates/opsml_interfaces" }
opsml-registry = { path = "crates/opsml_registry" }
opsml-experiment = { path = "crates/opsml_experiment" }
opsml-mocks = { path = "crates/opsml_mocks" }
opsml-server = { path = "crates/opsml_server" }
opsml-semver = { path = "crates/opsml_semver" }
opsml-settings = { path = "crates/opsml_settings" }
opsml-sql = { path = "crates/opsml_sql" }
opsml-state = { path = "crates/opsml_state" }
opsml-storage = { path = "crates/opsml_storage" }
opsml-todo = { path = "crates/opsml_todo" }
opsml-toml = { path = "crates/opsml_toml" }
opsml-types = { path = "crates/opsml_types" }
opsml-utils = { path = "crates/opsml_utils" }
opsml-version = { path = "crates/opsml_version" }

aes-gcm = "0.*"
anyhow = "1.0.93"
async-trait = "0.*"
axum = { version = "0.*", features = ["multipart", "macros"] }
axum-extra = { version =  "0.*", features = ["cookie", "typed-header"] }
aws-sdk-s3 = "1.75.0"
azure_core = "0.21.0"
azure_identity = "0.21.0" 
azure_storage = "0.21.0"
azure_storage_blobs = "0.21.0"
aws-config = {version = "1.*", features = ["sso"]}
aws-types = "1.*"
base64 = "0.22.*"
bytes = "1.*"
clap = { version = "4.*", features = ["derive", "string", "wrap_help"] }
chrono = { version = "0.*", features = ["serde"] }
colored_json = "5.*"
dirs = "6.*"
dynfmt = { version = "0.*", features = ["curly"] }
futures = "0.*"
futures-util = "0.*"
gcloud-storage = { version = "1.*", features = ["auth"] }
gcloud-auth = { version = "1.*" }
headers = { version = "0.*" }
hmac = "0.*"
hkdf = "0.*"
jsonwebtoken = "9.*"
metrics = { version = "0.*", default-features = false }
metrics-exporter-prometheus = { version = "0.*", default-features = false }
mime_guess = "2.*"
mimalloc = { version = "*", features = ["secure"] }
mockall = "0.*"
mockito = "1.*"
names = "0.*"
ort = { version = "2.0.0-rc.10" }
owo-colors = "4.*"
password-auth = "1.*"
pbkdf2 = "0.*"
pyo3 = { version = "0.25.*", features = ["extension-module", "anyhow", "serde", "chrono"] }
rand = { version = "0.9.1"}
rayon = "1.*"
regex = "1.*"
reqwest = { version = "0.12.*", features = ["json", "stream", "multipart", "rustls-tls", "rustls-tls-native-roots", "blocking" ], default-features = false }
rust-embed = "8.*"
reqwest-middleware = "0.*"
rusty-logging = "0.*"
potato-head = { git = "https://github.com/demml/potatohead.git", branch = "main" }
scouter-client = { git = "https://github.com/demml/scouter.git", branch = "ofeat/opsml-llm-integration" }
sha2 = "0.*"
semver = "1.*"
serde = { version = "1.*", features = ["derive"] }
serde_json = "1.*"
serde_qs = ">=0.14"
sqlx = { version = "0.*", features = [ "runtime-tokio", "tls-native-tls", "postgres", "mysql", "sqlite", "chrono", "json"] }
sysinfo = "0.*"
tabled = { version = "0.*", features = ["ansi"] }
tempfile = "3.*"
thiserror = "2.*"
time = "0.*"

tokio = { version = ">1.13.0", features = ["rt", "rt-multi-thread", "macros"] }
tokio-util = { version = "0.*",  features = ["codec", "io"]}
tokio-stream = { version = "0.*", features = ["sync"] }
toml_edit = { version = "0.*" , features = ["serde"]}
tower-http = { version = "0.*", features = ["cors", "fs", "trace"] }
tracing = "0.*"
tracing-appender = "0.*"
tracing-core = "0.*"
tracing-subscriber = {version = "0.*", features = ["json", "time"]}
uuid = { version = "1.*", features = ["v7"] }
walkdir = "2.*"
zip = "2.*"

[profile.release]
lto = "fat"
codegen-units = 1
strip = true
debug = false
